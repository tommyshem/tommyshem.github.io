<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Tom&#39;s Things</title>
    <link>https://tommyshem.github.io/tags/linux/</link>
    <description>Recent content in linux on Tom&#39;s Things</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Sun, 16 Feb 2020 14:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tommyshem.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to add scripts nautilus menu</title>
      <link>https://tommyshem.github.io/2020/02/16/how-to-add-scripts-nautilus-menu/</link>
      <pubDate>Sun, 16 Feb 2020 14:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2020/02/16/how-to-add-scripts-nautilus-menu/</guid>
      <description>Create a new user add sudo to the end of the command below if you want to add to sudoers group.
sudo adduser new_user_name_here Remove a user sudo userdel -r bob </description>
    </item>
    
    <item>
      <title>How to change password from default</title>
      <link>https://tommyshem.github.io/2020/02/16/how-to-change-password-from-default/</link>
      <pubDate>Sun, 16 Feb 2020 14:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2020/02/16/how-to-change-password-from-default/</guid>
      <description>The default user is pi, and the password is raspberry
Change default password passwd </description>
    </item>
    
    <item>
      <title>Compression</title>
      <link>https://tommyshem.github.io/2020/01/07/compression/</link>
      <pubDate>Tue, 07 Jan 2020 15:27:08 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2020/01/07/compression/</guid>
      <description>Compression Notes I tested 7z command it works fast but when testing it did not save user name.
But it is still ok for backing up your own files.
You can add and remove files from the compressed file
Below command used.
Compress all current folders and files 7z a filenamehere.7z ./ Decompress 7z e filenamehere.7z list files in compressed file 7z l filenamehere.7z Mount image fuse-7z-ng files.7z /media/my_compressed_files Tested tar with new compression zstd from facebook Note need sudo for root files to be copied</description>
    </item>
    
    <item>
      <title>Enable Sudoers</title>
      <link>https://tommyshem.github.io/2019/12/28/enable-sudoers/</link>
      <pubDate>Sat, 28 Dec 2019 21:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2019/12/28/enable-sudoers/</guid>
      <description>Arch Linux resources website https://wiki.archlinux.org/index.php/Users_and_groups
Enable sudoers Notes Settings Open settings.
visudo Uncomment the wheel group, this allows all users in the wheel group to run all commands.
%wheel ALL=(ALL) ALL Add user Add user to the wheel group, change userName to the user name you require.
useradd -m -G wheel -s /bin/bash userName Protect the user account with a password passwd userName Adding a system user useradd -r -s /usr/bin/nologin userName Changing user login names usermod -l userNewName userOldName Changing user&amp;rsquo;s home dir usermod -d /new/home/dir -m userName Test if sudo works by entering the command sudo whoami If you get something like this (below), then sudo is working for the set account.</description>
    </item>
    
    <item>
      <title>Swift on Linux with MacOS</title>
      <link>https://tommyshem.github.io/2018/02/23/swift-on-linux-with-macos/</link>
      <pubDate>Fri, 23 Feb 2018 18:30:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/02/23/swift-on-linux-with-macos/</guid>
      <description>Swift on linux Orignal blog website https://theswiftdev.com/2017/11/30/how-to-run-swift-on-linux/
website blog https://ashfurrow.com/blog/swift-on-line
Notes docker run -p 8000:8000 -v /Users:Users --privileged -i -t --name swiftfun swiftdocker/swift:latest /bin/bash docker start swiftfun docker attach swiftfun </description>
    </item>
    
    <item>
      <title>How to make gtk apps</title>
      <link>https://tommyshem.github.io/2018/02/18/how-to-make-gtk-apps/</link>
      <pubDate>Sun, 18 Feb 2018 18:19:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/02/18/how-to-make-gtk-apps/</guid>
      <description>C Gtk example example from https://developer.gnome.org/gtk3/stable/gtk-getting-started.html#id-1.2.3.5
&amp;lsquo;&amp;lsquo;&amp;lsquo;c #include &amp;lt;gtk/gtk.h&amp;gt;
static void activate (GtkApplication* app, gpointer user_data) { GtkWidget *window;
window = gtk_application_window_new (app); gtk_window_set_title (GTK_WINDOW (window), &amp;ldquo;Window&amp;rdquo;); gtk_window_set_default_size (GTK_WINDOW (window), 400, 400); gtk_widget_show_all (window); }
int main (int argc, char **argv) { GtkApplication *app; int status;
app = gtk_application_new (&amp;ldquo;org.gtk.example&amp;rdquo;, G_APPLICATION_FLAGS_NONE); g_signal_connect (app, &amp;ldquo;activate&amp;rdquo;, G_CALLBACK (activate), NULL); status = g_application_run (G_APPLICATION (app), argc, argv); g_object_unref (app);
return status; } &#39;&amp;rsquo;&amp;rsquo;</description>
    </item>
    
    <item>
      <title>How to spell check on Linux command line</title>
      <link>https://tommyshem.github.io/2018/02/11/how-to-spell-check-on-linux-command-line/</link>
      <pubDate>Sun, 11 Feb 2018 18:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/02/11/how-to-spell-check-on-linux-command-line/</guid>
      <description>spell check on Linux command line</description>
    </item>
    
    <item>
      <title>How to add scripts nautilus menu</title>
      <link>https://tommyshem.github.io/2018/01/28/how-to-add-scripts-nautilus-menu/</link>
      <pubDate>Sun, 28 Jan 2018 21:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/01/28/how-to-add-scripts-nautilus-menu/</guid>
      <description>How to add scripts to nautilus website</description>
    </item>
    
  </channel>
</rss>