<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Tom&#39;s Things</title>
    <link>https://tommyshem.github.io/tags/linux/</link>
    <description>Recent content in linux on Tom&#39;s Things</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Fri, 23 Feb 2018 18:30:00 +0000</lastBuildDate>
    
	<atom:link href="https://tommyshem.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swift on Linux with MacOS</title>
      <link>https://tommyshem.github.io/2018/02/23/swift-on-linux-with-macos/</link>
      <pubDate>Fri, 23 Feb 2018 18:30:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/02/23/swift-on-linux-with-macos/</guid>
      <description> Swift on linux Orignal blog website https://theswiftdev.com/2017/11/30/how-to-run-swift-on-linux/
website blog https://ashfurrow.com/blog/swift-on-line
Notes docker run -p 8000:8000 -v /Users:Users --privileged -i -t --name swiftfun swiftdocker/swift:latest /bin/bash  docker start swiftfun docker attach swiftfun  </description>
    </item>
    
    <item>
      <title>How to make gtk apps</title>
      <link>https://tommyshem.github.io/2018/02/18/how-to-make-gtk-apps/</link>
      <pubDate>Sun, 18 Feb 2018 18:19:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/02/18/how-to-make-gtk-apps/</guid>
      <description>C Gtk example example from https://developer.gnome.org/gtk3/stable/gtk-getting-started.html#id-1.2.3.5
&amp;rdquo;&amp;lsquo;c #include 
static void activate (GtkApplication* app, gpointer user_data) { GtkWidget *window;
window = gtk_application_window_new (app); gtk_window_set_title (GTK_WINDOW (window), &amp;ldquo;Window&amp;rdquo;); gtk_window_set_default_size (GTK_WINDOW (window), 400, 400); gtk_widget_show_all (window); }
int main (int argc, char **argv) { GtkApplication *app; int status;
app = gtk_application_new (&amp;ldquo;org.gtk.example&amp;rdquo;, G_APPLICATION_FLAGS_NONE); g_signal_connect (app, &amp;ldquo;activate&amp;rdquo;, G_CALLBACK (activate), NULL); status = g_application_run (G_APPLICATION (app), argc, argv); g_object_unref (app);
return status; } &amp;ldquo;&amp;rsquo;</description>
    </item>
    
    <item>
      <title>How to spell check on Linux command line</title>
      <link>https://tommyshem.github.io/2018/02/11/how-to-spell-check-on-linux-command-line/</link>
      <pubDate>Sun, 11 Feb 2018 18:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/02/11/how-to-spell-check-on-linux-command-line/</guid>
      <description>spell check on Linux command line</description>
    </item>
    
    <item>
      <title>How to add scripts nautilus menu</title>
      <link>https://tommyshem.github.io/2018/01/28/how-to-add-scripts-nautilus-menu/</link>
      <pubDate>Sun, 28 Jan 2018 21:00:00 +0000</pubDate>
      
      <guid>https://tommyshem.github.io/2018/01/28/how-to-add-scripts-nautilus-menu/</guid>
      <description>How to add scripts to nautilus website</description>
    </item>
    
  </channel>
</rss>